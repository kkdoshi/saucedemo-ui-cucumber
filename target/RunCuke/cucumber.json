[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4836704200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "User should not be able to login the application using invalid credentials",
        "description": "",
        "id": "login-functionality;user-should-not-be-able-to-login-the-application-using-invalid-credentials;;2",
        "after": [
          {
            "result": {
              "duration": 791033900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 166603900,
              "status": "passed"
            },
            "line": 6,
            "name": "User is on \u0027saucedemo\u0027 website",
            "match": {
              "location": "LoginStepDefs.userIsOnSaucedemoWebsite()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139876800,
              "status": "passed"
            },
            "line": 7,
            "name": "User enters invalid \"incorrect_email\" in the \u0027userid\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "incorrect_email",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInTheUseridField(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 72578500,
              "status": "passed"
            },
            "line": 8,
            "name": "User enters invalid \"\" in the \u0027password\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInThePasswordField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75447600,
              "status": "passed"
            },
            "line": 9,
            "name": "User clicks on the login button",
            "match": {
              "location": "LoginStepDefs.userClicksOnTheLoginButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40880900,
              "status": "passed"
            },
            "line": 10,
            "name": "User will see the error message displayed \"Epic sadface: Password is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Epic sadface: Password is required",
                  "offset": 43
                }
              ],
              "location": "LoginStepDefs.userWillSeeTheErrorMessageDisplayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Smoke"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1997899900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 14,
        "name": "User should not be able to login the application using invalid credentials",
        "description": "",
        "id": "login-functionality;user-should-not-be-able-to-login-the-application-using-invalid-credentials;;3",
        "after": [
          {
            "result": {
              "duration": 868518700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "line": 6,
            "name": "User is on \u0027saucedemo\u0027 website",
            "match": {
              "location": "LoginStepDefs.userIsOnSaucedemoWebsite()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 114241200,
              "status": "passed"
            },
            "line": 7,
            "name": "User enters invalid \"\" in the \u0027userid\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInTheUseridField(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 149526000,
              "status": "passed"
            },
            "line": 8,
            "name": "User enters invalid \"incorrect_password\" in the \u0027password\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "incorrect_password",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInThePasswordField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 186561800,
              "status": "passed"
            },
            "line": 9,
            "name": "User clicks on the login button",
            "match": {
              "location": "LoginStepDefs.userClicksOnTheLoginButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39365800,
              "status": "passed"
            },
            "line": 10,
            "name": "User will see the error message displayed \"Epic sadface: Username is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Epic sadface: Username is required",
                  "offset": 43
                }
              ],
              "location": "LoginStepDefs.userWillSeeTheErrorMessageDisplayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Smoke"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1800379200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 15,
        "name": "User should not be able to login the application using invalid credentials",
        "description": "",
        "id": "login-functionality;user-should-not-be-able-to-login-the-application-using-invalid-credentials;;4",
        "after": [
          {
            "result": {
              "duration": 759031500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 537300,
              "status": "passed"
            },
            "line": 6,
            "name": "User is on \u0027saucedemo\u0027 website",
            "match": {
              "location": "LoginStepDefs.userIsOnSaucedemoWebsite()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 127972000,
              "status": "passed"
            },
            "line": 7,
            "name": "User enters invalid \"abcde%$£\" in the \u0027userid\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "abcde%$£",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInTheUseridField(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 102272900,
              "status": "passed"
            },
            "line": 8,
            "name": "User enters invalid \"12345678\" in the \u0027password\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "12345678",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInThePasswordField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66329000,
              "status": "passed"
            },
            "line": 9,
            "name": "User clicks on the login button",
            "match": {
              "location": "LoginStepDefs.userClicksOnTheLoginButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42682500,
              "status": "passed"
            },
            "line": 10,
            "name": "User will see the error message displayed \"Epic sadface: Username and password do not match any user in this service\"",
            "match": {
              "arguments": [
                {
                  "val": "Epic sadface: Username and password do not match any user in this service",
                  "offset": 43
                }
              ],
              "location": "LoginStepDefs.userWillSeeTheErrorMessageDisplayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Smoke"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1852612300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 16,
        "name": "User should not be able to login the application using invalid credentials",
        "description": "",
        "id": "login-functionality;user-should-not-be-able-to-login-the-application-using-invalid-credentials;;5",
        "after": [
          {
            "result": {
              "duration": 804793800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "line": 6,
            "name": "User is on \u0027saucedemo\u0027 website",
            "match": {
              "location": "LoginStepDefs.userIsOnSaucedemoWebsite()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92191000,
              "status": "passed"
            },
            "line": 7,
            "name": "User enters invalid \"\" in the \u0027userid\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInTheUseridField(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61051600,
              "status": "passed"
            },
            "line": 8,
            "name": "User enters invalid \"\" in the \u0027password\u0027 field",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 21
                }
              ],
              "location": "LoginStepDefs.userEntersInvalidInThePasswordField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87244800,
              "status": "passed"
            },
            "line": 9,
            "name": "User clicks on the login button",
            "match": {
              "location": "LoginStepDefs.userClicksOnTheLoginButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30817800,
              "status": "passed"
            },
            "line": 10,
            "name": "User will see the error message displayed \"Epic sadface: Username is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Epic sadface: Username is required",
                  "offset": 43
                }
              ],
              "location": "LoginStepDefs.userWillSeeTheErrorMessageDisplayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Smoke"
          }
        ]
      }
    ],
    "name": "Login Functionality",
    "description": "As a user I want to check the login functionality",
    "id": "login-functionality",
    "keyword": "Feature",
    "uri": "login.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1816301000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 5,
        "name": "User navigates SauceDemo page and completes the item purchase",
        "description": "",
        "id": "search-functionality;user-navigates-saucedemo-page-and-completes-the-item-purchase",
        "after": [
          {
            "result": {
              "duration": 810080200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 115800,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on SauceDemo page",
            "match": {
              "location": "PurchaseSteps.iAmOnSauceDemoPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 251234600,
              "status": "passed"
            },
            "line": 7,
            "name": "I login with credential username \"standard_user\" and password \"secret_sauce\"",
            "match": {
              "arguments": [
                {
                  "val": "standard_user",
                  "offset": 34
                },
                {
                  "val": "secret_sauce",
                  "offset": 63
                }
              ],
              "location": "PurchaseSteps.iLoginWithCredentialUsernameAndPassword(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128947500,
              "status": "passed"
            },
            "line": 8,
            "name": "I click on Login button",
            "match": {
              "location": "PurchaseSteps.iClickOnLoginButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 444410000,
              "status": "passed"
            },
            "line": 9,
            "name": "I filter the products by Price \"Price (high to low)\"",
            "match": {
              "arguments": [
                {
                  "val": "Price (high to low)",
                  "offset": 32
                }
              ],
              "location": "PurchaseSteps.iFilterTheProductsByPrice(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2328715900,
              "status": "passed"
            },
            "line": 10,
            "name": "I select cheapest \u0026 costliest products and add to basket",
            "match": {
              "location": "PurchaseSteps.iSelectCheapestCostliestProductsAndAddToBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155086500,
              "status": "passed"
            },
            "line": 11,
            "name": "I open shopping cart",
            "match": {
              "location": "PurchaseSteps.iOpenShoppingCart()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101034700,
              "status": "passed"
            },
            "line": 12,
            "name": "I go to checkout",
            "match": {
              "location": "PurchaseSteps.iGoToCheckout()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 363160600,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter details firstname \"Tom\", lastName \"Cat\" and zipPostalCode \"HA8 7UU\"",
            "match": {
              "arguments": [
                {
                  "val": "Tom",
                  "offset": 27
                },
                {
                  "val": "Cat",
                  "offset": 43
                },
                {
                  "val": "HA8 7UU",
                  "offset": 67
                }
              ],
              "location": "PurchaseSteps.iEnterDetailsFirstnameLastNameAndZipPostalCode(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99997500,
              "status": "passed"
            },
            "line": 14,
            "name": "I click on continue button",
            "match": {
              "location": "PurchaseSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82712100,
              "status": "passed"
            },
            "line": 15,
            "name": "I click on finish button",
            "match": {
              "location": "PurchaseSteps.iClickOnFinishButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41064400,
              "status": "passed"
            },
            "line": 16,
            "name": "I should be able to see message \"Thank you for your order\"",
            "match": {
              "arguments": [
                {
                  "val": "Thank you for your order",
                  "offset": 33
                }
              ],
              "location": "PurchaseSteps.iShouldBeAbleToSeeMessage(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Search functionality",
    "description": "As a user I want to purchase cheapest and costliest product from the SauceDemo after sorting the products by Hight to Low filter.",
    "id": "search-functionality",
    "keyword": "Feature",
    "uri": "purchase.feature"
  }
]